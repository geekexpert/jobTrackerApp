{"ast":null,"code":"var _jsxFileName = \"/Users/johnsilva/Documents/Tutorials/job-app-tracker/src/components/EditJobStatus.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n// Import AppDispatch\nimport axios from \"axios\"; // Import axios\nimport { fetchJobApplications } from \"../redux/jobApplicationSlice\"; // Import action to fetch job applications\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditJobStatus = () => {\n  _s();\n  const dispatch = useDispatch(); // Use AppDispatch type\n  const navigate = useNavigate();\n  const {\n    jobId\n  } = useParams();\n  const [status, setStatus] = useState(\"\");\n\n  // Fetch the initial status from API or set a default value\n  useEffect(() => {\n    if (jobId) {\n      // Ideally, you should fetch the current job application status from the API\n      // This can be done using an API call, for now, we'll assume it's \"applied\"\n      setStatus(\"applied\");\n    }\n  }, [jobId]);\n  const handleChange = e => {\n    setStatus(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (jobId) {\n      try {\n        // Make the API PUT request to update the job application status\n        await axios.put(`https://localhost:8484/api/JobApplication/${jobId}`, {\n          status\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        // Dispatch action to fetch updated list of job applications\n        dispatch(fetchJobApplications());\n\n        // Redirect to the home page after update\n        navigate(\"/\");\n      } catch (error) {\n        console.error(\"Error updating job application status:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"p-4 border rounded shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-bold\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: handleChange,\n        className: \"w-full p-2 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"applied\",\n          children: \"Applied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"waiting\",\n          children: \"Waiting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rejected\",\n          children: \"Rejected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"mt-4 bg-blue-500 text-white p-2 rounded hover:bg-blue-600\",\n      children: \"Update Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(EditJobStatus, \"iV29623IsWJJcU5AxtwnPW6YlEk=\", false, function () {\n  return [useDispatch, useNavigate, useParams];\n});\n_c = EditJobStatus;\nexport default EditJobStatus;\nvar _c;\n$RefreshReg$(_c, \"EditJobStatus\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useParams","useNavigate","axios","fetchJobApplications","jsxDEV","_jsxDEV","EditJobStatus","_s","dispatch","navigate","jobId","status","setStatus","handleChange","e","target","value","handleSubmit","preventDefault","put","headers","error","console","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","_c","$RefreshReg$"],"sources":["/Users/johnsilva/Documents/Tutorials/job-app-tracker/src/components/EditJobStatus.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { AppDispatch } from \"../redux/store\"; // Import AppDispatch\nimport axios from \"axios\"; // Import axios\nimport { fetchJobApplications } from \"../redux/jobApplicationSlice\"; // Import action to fetch job applications\n\nconst EditJobStatus: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>(); // Use AppDispatch type\n  const navigate = useNavigate();\n  const { jobId } = useParams<{ jobId: string }>();\n\n  const [status, setStatus] = useState<string>(\"\");\n\n  // Fetch the initial status from API or set a default value\n  useEffect(() => {\n    if (jobId) {\n      // Ideally, you should fetch the current job application status from the API\n      // This can be done using an API call, for now, we'll assume it's \"applied\"\n      setStatus(\"applied\");\n    }\n  }, [jobId]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatus(e.target.value);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (jobId) {\n      try {\n        // Make the API PUT request to update the job application status\n        await axios.put(\n          `https://localhost:8484/api/JobApplication/${jobId}`,\n          { status },\n          { headers: { \"Content-Type\": \"application/json\" } }\n        );\n\n        // Dispatch action to fetch updated list of job applications\n        dispatch(fetchJobApplications());\n\n        // Redirect to the home page after update\n        navigate(\"/\");\n\n      } catch (error) {\n        console.error(\"Error updating job application status:\", error);\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-4 border rounded shadow-md\">\n      <div>\n        <label className=\"block font-bold\">Status</label>\n        <select\n          value={status}\n          onChange={handleChange}\n          className=\"w-full p-2 border rounded\"\n        >\n          <option value=\"applied\">Applied</option>\n          <option value=\"waiting\">Waiting</option>\n          <option value=\"rejected\">Rejected</option>\n        </select>\n      </div>\n      <button\n        type=\"submit\"\n        className=\"mt-4 bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\n      >\n        Update Status\n      </button>\n    </form>\n  );\n};\n\nexport default EditJobStatus;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACX;AAC9C,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,SAASC,oBAAoB,QAAQ,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGT,WAAW,CAAc,CAAC,CAAC,CAAC;EAC7C,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAM,CAAC,GAAGV,SAAS,CAAoB,CAAC;EAEhD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIY,KAAK,EAAE;MACT;MACA;MACAE,SAAS,CAAC,SAAS,CAAC;IACtB;EACF,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,MAAMG,YAAY,GAAIC,CAAuC,IAAK;IAChEF,SAAS,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAkB,IAAK;IACjDA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIR,KAAK,EAAE;MACT,IAAI;QACF;QACA,MAAMR,KAAK,CAACiB,GAAG,CACb,6CAA6CT,KAAK,EAAE,EACpD;UAAEC;QAAO,CAAC,EACV;UAAES,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAAE,CACpD,CAAC;;QAED;QACAZ,QAAQ,CAACL,oBAAoB,CAAC,CAAC,CAAC;;QAEhC;QACAM,QAAQ,CAAC,GAAG,CAAC;MAEf,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF;EACF,CAAC;EAED,oBACEhB,OAAA;IAAMkB,QAAQ,EAAEN,YAAa;IAACO,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBACpEpB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAOmB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjDxB,OAAA;QACEW,KAAK,EAAEL,MAAO;QACdmB,QAAQ,EAAEjB,YAAa;QACvBW,SAAS,EAAC,2BAA2B;QAAAC,QAAA,gBAErCpB,OAAA;UAAQW,KAAK,EAAC,SAAS;UAAAS,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCxB,OAAA;UAAQW,KAAK,EAAC,SAAS;UAAAS,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCxB,OAAA;UAAQW,KAAK,EAAC,UAAU;UAAAS,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNxB,OAAA;MACE0B,IAAI,EAAC,QAAQ;MACbP,SAAS,EAAC,2DAA2D;MAAAC,QAAA,EACtE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACtB,EAAA,CAjEID,aAAuB;EAAA,QACVP,WAAW,EACXE,WAAW,EACVD,SAAS;AAAA;AAAAgC,EAAA,GAHvB1B,aAAuB;AAmE7B,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}