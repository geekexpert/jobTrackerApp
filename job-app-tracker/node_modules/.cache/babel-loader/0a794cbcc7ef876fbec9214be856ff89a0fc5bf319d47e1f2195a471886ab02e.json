{"ast":null,"code":"var _jsxFileName = \"/Users/johnsilva/Documents/Tutorials/job-app-tracker/src/components/EditJobStatus.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { updateJobApplicationStatus } from \"../redux/jobApplicationSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Import AppDispatch\n\nconst EditJobStatus = () => {\n  _s();\n  const dispatch = useDispatch(); // Use AppDispatch type\n  const navigate = useNavigate();\n  const {\n    jobId\n  } = useParams();\n  const [status, setStatus] = useState(\"\");\n  useEffect(() => {\n    if (jobId) {\n      setStatus(\"applied\"); // You can replace this with real data fetching if needed\n    }\n  }, [jobId]);\n  const handleChange = e => {\n    setStatus(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (jobId) {\n      dispatch(updateJobApplicationStatus({\n        jobId: parseInt(jobId),\n        status\n      }));\n      navigate(\"/\"); // Redirect to home after update\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"p-4 border rounded shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-bold\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: handleChange,\n        className: \"w-full p-2 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"applied\",\n          children: \"Applied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"waiting\",\n          children: \"Waiting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rejected\",\n          children: \"Rejected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"mt-4 bg-blue-500 text-white p-2 rounded hover:bg-blue-600\",\n      children: \"Update Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(EditJobStatus, \"iV29623IsWJJcU5AxtwnPW6YlEk=\", false, function () {\n  return [useDispatch, useNavigate, useParams];\n});\n_c = EditJobStatus;\nexport default EditJobStatus;\nvar _c;\n$RefreshReg$(_c, \"EditJobStatus\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useParams","useNavigate","updateJobApplicationStatus","jsxDEV","_jsxDEV","EditJobStatus","_s","dispatch","navigate","jobId","status","setStatus","handleChange","e","target","value","handleSubmit","preventDefault","parseInt","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","_c","$RefreshReg$"],"sources":["/Users/johnsilva/Documents/Tutorials/job-app-tracker/src/components/EditJobStatus.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { updateJobApplicationStatus } from \"../redux/jobApplicationSlice\";\nimport { AppDispatch } from \"../redux/store\"; // Import AppDispatch\n\nconst EditJobStatus: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>(); // Use AppDispatch type\n  const navigate = useNavigate();\n  const { jobId } = useParams<{ jobId: string }>();\n\n  const [status, setStatus] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (jobId) {\n      setStatus(\"applied\"); // You can replace this with real data fetching if needed\n    }\n  }, [jobId]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatus(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (jobId) {\n      dispatch(updateJobApplicationStatus({ jobId: parseInt(jobId), status }));\n      navigate(\"/\"); // Redirect to home after update\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-4 border rounded shadow-md\">\n      <div>\n        <label className=\"block font-bold\">Status</label>\n        <select\n          value={status}\n          onChange={handleChange}\n          className=\"w-full p-2 border rounded\"\n        >\n          <option value=\"applied\">Applied</option>\n          <option value=\"waiting\">Waiting</option>\n          <option value=\"rejected\">Rejected</option>\n        </select>\n      </div>\n      <button\n        type=\"submit\"\n        className=\"mt-4 bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\n      >\n        Update Status\n      </button>\n    </form>\n  );\n};\n\nexport default EditJobStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}